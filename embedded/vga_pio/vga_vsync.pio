.program vga_vsync
.side_set 1 opt

; frontporch: 10  lines
; sync pulse: 2   lines
; back porch: 29  lines (perhaps we try 32, since that's easier)
; active for: 480 lines
;
; Code size could be reduced with side setting



pull block                        ; pull active timing value from fifo to osr
.wrap_target                      

; ACTIVE
mov x, osr                        
activefront:
    wait 1 irq 0                  ; wait for hsync to go high
    irq 1                         ; signal rgb state machine that we're in active mode
    jmp x-- activefront           

; FRONTPORCH
set y, 9                          
frontporch:
    wait 1 irq 0                  
    jmp y-- frontporch            

; SYNC PULSE
wait 1 irq 0 side 0                ;
wait 1 irq 0                       ; wait for two scanlines

; BACKPORCH
set y, 31                         ; 
backporch:
    wait 1 irq 0   side 1         ; wait for hsync and side set vsync high
    jmp y-- backporch             ;

.wrap                             ; Program wraps from here



% c-sdk {
static inline void vga_vsync_program_init(PIO pio, uint sm, uint offset, uint pin) {

    pio_sm_config c = vga_vsync_program_get_default_config(offset);

    sm_config_set_set_pins(&c, pin, 1);
    sm_config_set_sideset_pins(&c, pin);

    sm_config_set_clkdiv(&c, 5) ;

    pio_gpio_init(pio, pin);
    
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_init(pio, sm, offset, &c);

%}


.program vga_rgb

pull block 					; pull active timing value from fifo to osr
mov y, osr 					; copy value from osr to y scratch register
.wrap_target

mov osr, NULL               ; clear osr
out pins, 8	[3]             ; zero RGB pins in blanking			

mov x, y 					; initialize counter variable

wait 1 irq 1 [3]            ; Wait for vsync active

colorout:
	pull block				; uull color value
	out pins, 8	[7]			; drive pins and delay

	jmp x-- colorout		; active mode

;set pins, 0 
.wrap


% c-sdk {
static inline void vga_rgb_program_init(PIO pio, uint sm, uint offset, uint pin) {

    pio_sm_config c = vga_rgb_program_get_default_config(offset);

    sm_config_set_out_pins(&c, pin, 8);

    int n_pins = 8;

    for(int pin_num = 0; pin_num < n_pins; pin_num++ )
    {
        pio_gpio_init(pio, pin + pin_num);
    }
    
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 8, true);

    pio_sm_init(pio, sm, offset, &c);
}
%}